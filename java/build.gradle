subprojects {
    apply plugin: 'idea'
//    apply plugin: 'application'
    apply plugin: 'java'

    version = '0.1.0'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

	jar{
		baseName = project.name.split("-")[0]
		classifier = project.name.split("-")[1]
        destinationDir = file("$rootDir")
	}
}

project(':pylos-core') {
    dependencies {
        compile files('../lib/commons-math3-3.0.jar')
        compile files('../lib/encog-core-3.3.0.jar')
    }
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier += 'sources'
        from sourceSets.main.allSource
        destinationDir = file("$rootDir")
    }
    artifacts {
        archives sourcesJar
    }
    jar {
        destinationDir = file("$rootDir")
    }
}

project(':pylos-student') {
    dependencies {
        compile project(':pylos-core')
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://repository.jboss.org/nexus/content/groups/public/'
        }
    }

    ext {
        droolsVersion = "7.6.0.Final"
    }

    test {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile "org.kie:kie-api:${droolsVersion}"
        compile "org.drools:drools-compiler:${droolsVersion}"
        compile "ch.qos.logback:logback-classic:1.1.+"
        compile "org.slf4j:slf4j-api:1.7.+"
    }

	jar {
		manifest {
			attributes 'Main-Class': 'be.kuleuven.pylos.player.main.PylosMain'
		}
		from {
			configurations.runtime.collect {
				it.isDirectory() ? it : zipTree(it)
			}
		}
	}
}

project(':pylos-gui') {
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier += 'sources'
//        from {
//            configurations.runtime.collect {
//                it.isDirectory() ? it : zipTree(it)
//            }
//        }
        from sourceSets.main.allSource
        destinationDir = file("$rootDir")
    }
    artifacts {
        archives sourcesJar
    }
    dependencies {
        compile project(':pylos-student')
    }
    jar {
        destinationDir = file("$rootDir")
        manifest {
            attributes 'Main-Class': 'be.kuleuven.pylos.gui.PylosGuiMain'
        }
        from {
            configurations.runtime.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }
    }
}